# Generated by Django 5.2 on 2025-04-04 13:01

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0003_auto_20250404_1232'),
    ]

    operations = [
        migrations.AlterField(
            model_name='thermalanalysis',
            name='contour_base64',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='thermalanalysis',
            name='heatmap_base64',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='thermalanalysis',
            name='rectangle_base64',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='thermalanalysis',
            name='temp_distribution_json',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.CreateModel(
            name='GreenCalculation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('carbon_emissions', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('energy_consumption', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('water_usage', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('waste_produced', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('air_quality_index', models.FloatField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MinValueValidator(0)])),
                ('recycling_rate', models.FloatField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MinValueValidator(0)])),
                ('carbon_score', models.FloatField()),
                ('energy_score', models.FloatField()),
                ('water_score', models.FloatField()),
                ('waste_score', models.FloatField()),
                ('aqi_score', models.FloatField()),
                ('recycling_score', models.FloatField()),
                ('green_score', models.FloatField()),
                ('status', models.CharField(max_length=50)),
                ('recommendations_json', models.TextField(blank=True, null=True)),
                ('submitted_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='green_calculations', to='core.company')),
            ],
            options={
                'verbose_name': 'Green Calculation',
                'verbose_name_plural': 'Green Calculations',
                'ordering': ['-submitted_at'],
            },
        ),
    ]
